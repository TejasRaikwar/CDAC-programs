1.Write a stored procedure which will find avg of all the salaries in the table. Display avg sal in the procedure.
-->
mysql> delimiter //
mysql> create procedure display(out k decimal(8,2))
    -> begin
    -> select avg(sal) into k
    -> from emp
    -> ;
    -> end //
	delimiter ;
mysql> call display(@k);
mysql> select @k;
+---------+
| @k      |
+---------+
| 1936.33 |
+---------
2.Write a stored procedure which will find avg salary of dept no 20. Display  avg salary out of the procedure.
-->
mysql> delimiter //
mysql> create procedure display1(out k decimal(8,2))
    -> begin
    -> declare x int default 20;
    -> select avg(sal) into k
    -> from emp
    -> where deptno = x;
    -> end //
Query OK, 0 rows affected (0.00 sec)

mysql> call display1(@k);
Query OK, 1 row affected (0.00 sec)

mysql> select @k;
+---------+
| @k      |
+---------+
| 2175.00 |
+---------+
1 row in set (0.00 sec)


3.Write a stored procedure which will find avg salary for any deptno passed to it.  
Pass deptno as in parameter and avg(sal) as out parameter.          
-->
mysql> create procedure find_avg_sal(in deptno int,out avg_sal decimal(8,2))
    -> begin
    -> select avg(sal) into avg_sal from emp where deptno=deptno;
    -> end //
mysql> set @d=20;
mysql> select @d as  'dept',@s as 'avg_sal';
+------+---------+
| dept | avg_sal |
+------+---------+
|   20 | 1936.33 |
+------+---------+
1 row in set (0.00 sec)

4.Write a procedure to calculate total salary of all employees. 
Total sal = sal +comm.
-->
mysql> delimiter //
mysql> create procedure showtotalsal(out totalsal decimal(8,2))
    -> begin
    -> select sum(ifnull(sal,0)+ifnull(comm,0)) into totalsal from emp;
    -> end //
mysql> delimiter ;
mysql> select @k;
+----------+
| @k       |
+----------+
| 31545.00 |
+----------+
1 row in set (0.00 sec)



5.Pass any number to the procedure and check if it is a perfect number.
If the number is perfect, procedure should set value of out parameter as 1 otherwise as 0.   
-->

6.Pass empno as a in parameter to the procedure. 
If empno is found in the table then, display corrosponding salary out of the procedure.
If empno is not found in the table then, display 0 out of the parameter.    
-->
mysql> delimiter //
mysql> create PROCEDURE displaysal(
    ->     in pempno INT,
    ->     out empsal decimal(8,2)
    -> )
    -> begin
    ->     set empsal = 0;
    ->     select sal into empsal
    ->     from emp
    ->     where empno = pempno;
    ->
    ->     if row_count() = 0 then
    ->     set empsal =0;
    ->     end if;
    -> end //

mysql> call displaysal(7369,@sal);
Query OK, 1 row affected (0.00 sec)

mysql> select @sal;
+--------+
| @sal   |
+--------+
| 800.00 |
+--------+

mysql> call displaysal(9999,@sal);
mysql> select @sal;
+------+
| @sal |
+------+
| 0.00 |
+------+

mysql> delimiter ;


7.Write procedure 'prime' which will check if number passed to the procedure is prime.
Procedure should display 1 if prime or 0 if nit prime. Use out parameter to display value out of 
the procedure and in parameter to pass value to the procedure.
-->
mysql> DELIMITER //
mysql>
mysql> CREATE PROCEDURE checkprime(IN n INT, OUT res INT)
    -> BEGIN
    ->     DECLARE i INT DEFAULT 2;
    ->     DECLARE flag INT DEFAULT 1;
    ->
    ->     IF n <= 1 THEN
    ->         SET res = 0;
    ->     ELSEIF n = 2 THEN
    ->         SET res = 1;
    ->     ELSE
    ->         my_loop: WHILE i <= SQRT(n) DO
    ->             IF n % i = 0 THEN
    ->                 SET flag = 0;
    ->                 LEAVE my_loop;
    ->             END IF;
    ->             SET i = i + 1;
    ->         END WHILE;
    ->
    ->         IF flag = 1 THEN
    ->             SET res = 1;
    ->         ELSE
    ->             SET res = 0;
    ->         END IF;
    ->     END IF;
    -> END //
Query OK, 0 rows affected (0.00 sec)

mysql> DELIMITER ;
mysql> call checkprime(6,@r);
Query OK, 0 rows affected (0.00 sec)

mysql> select @r;
+------+
| @r   |
+------+
|    0 |
+------+
1 row in set (0.00 sec)

mysql> call checkprime(7,@r);
Query OK, 0 rows affected (0.00 sec)

mysql> select @r;
+------+
| @r   |
+------+
|    1 |
+------+



8.Copy table emp as empTmp.
Write the procedure to accept job as in
parameter and perform following actions.
Hike in sal by  5% if employee is manager.
Hike in sal by 10% if employee is clerk
Hile in sal by 7% if employee is analyse
otherwise hike by 3%.
​​​​​​​Make necessary changes in empTmp table.
-->
mysql> select * from emptmp;
+-------+--------+-----------+------+------------+---------+---------+--------+
| EMPNO | ENAME  | JOB       | MGR  | HIREDATE   | SAL     | COMM    | DEPTNO |
+-------+--------+-----------+------+------------+---------+---------+--------+
|  7369 | SMITH  | CLERK     | 7902 | 1980-12-17 |  880.00 |    NULL |     20 |
|  7499 | ALLEN  | SALESMAN  | 7698 | 1981-02-20 | 1600.00 |  300.00 |     30 |
|  7521 | WARD   | SALESMAN  | 7698 | 1981-02-22 | 1250.00 |  500.00 |     30 |
|  7566 | JONES  | MANAGER   | 7839 | 1981-04-02 | 2975.00 |    NULL |     20 |
|  7654 | MARTIN | SALESMAN  | 7698 | 1981-09-28 | 1250.00 | 1400.00 |     30 |
|  7698 | BLAKE  | MANAGER   | 7839 | 1981-05-01 | 2850.00 |    NULL |     30 |
|  7782 | CLARK  | MANAGER   | 7839 | 1981-06-09 | 2450.00 |    NULL |     10 |
|  7788 | SCOTT  | ANALYST   | 7566 | 1982-12-09 | 3000.00 |    NULL |     20 |
|  7839 | KING   | PRESIDENT | NULL | 1981-11-17 | 5000.00 |    NULL |     10 |
|  7844 | TURNER | SALESMAN  | 7698 | 1981-09-08 | 1500.00 |    0.00 |     30 |
|  7876 | ADAMS  | CLERK     | 7788 | 1983-01-12 | 1210.00 |    NULL |     20 |
|  7900 | JAMES  | CLERK     | 7698 | 1981-12-03 | 1045.00 |    NULL |     30 |
|  7902 | FORD   | ANALYST   | 7566 | 1981-12-03 | 3000.00 |    NULL |     20 |
|  7934 | MILLER | CLERK     | 7782 | 1982-01-23 | 1430.00 |    NULL |     10 |
|  1111 | Geeta  | NULL      | NULL | NULL       |   20.00 |  300.00 |  10000 |
|  2222 | Raj    | Analyst   | NULL | NULL       |    NULL |    NULL |     40 |
|  2222 | Raj    | Analyst   | NULL | NULL       |    NULL |    NULL |     20 |
|    11 | raja   | NULL      | NULL | NULL       |    NULL |    NULL |     50 |
+-------+--------+-----------+------+------------+---------+---------+--------+
18 rows in set (0.00 sec)

mysql> DELIMITER //
mysql>
mysql> CREATE PROCEDURE incrsal(IN p_job varchar(20))
    -> BEGIN
    ->     DECLARE inc DECIMAL(7,2);
    ->
    ->     IF p_job = 'manager' THEN
    ->         SET inc = 1.05;
    ->     ELSEIF p_job = 'clerk' THEN
    ->         SET inc = 1.10;
    ->     ELSEIF p_job = 'Analyst' THEN
    ->         SET inc = 1.07;
    ->     ELSE
    ->         SET inc = 1.03;
    ->     END IF;
    ->
    ->     UPDATE emptmp
    ->     SET sal = (sal * inc)
    ->     WHERE job = p_job;
    ->     select * from emptmp;
    -> END //
Query OK, 0 rows affected (0.00 sec)

mysql>
mysql> DELIMITER ;
mysql> call incrsal('manager');
+-------+--------+-----------+------+------------+---------+---------+--------+
| EMPNO | ENAME  | JOB       | MGR  | HIREDATE   | SAL     | COMM    | DEPTNO |
+-------+--------+-----------+------+------------+---------+---------+--------+
|  7369 | SMITH  | CLERK     | 7902 | 1980-12-17 |  880.00 |    NULL |     20 |
|  7499 | ALLEN  | SALESMAN  | 7698 | 1981-02-20 | 1600.00 |  300.00 |     30 |
|  7521 | WARD   | SALESMAN  | 7698 | 1981-02-22 | 1250.00 |  500.00 |     30 |
|  7566 | JONES  | MANAGER   | 7839 | 1981-04-02 | 3123.75 |    NULL |     20 |
|  7654 | MARTIN | SALESMAN  | 7698 | 1981-09-28 | 1250.00 | 1400.00 |     30 |
|  7698 | BLAKE  | MANAGER   | 7839 | 1981-05-01 | 2992.50 |    NULL |     30 |
|  7782 | CLARK  | MANAGER   | 7839 | 1981-06-09 | 2572.50 |    NULL |     10 |
|  7788 | SCOTT  | ANALYST   | 7566 | 1982-12-09 | 3000.00 |    NULL |     20 |
|  7839 | KING   | PRESIDENT | NULL | 1981-11-17 | 5000.00 |    NULL |     10 |
|  7844 | TURNER | SALESMAN  | 7698 | 1981-09-08 | 1500.00 |    0.00 |     30 |
|  7876 | ADAMS  | CLERK     | 7788 | 1983-01-12 | 1210.00 |    NULL |     20 |
|  7900 | JAMES  | CLERK     | 7698 | 1981-12-03 | 1045.00 |    NULL |     30 |
|  7902 | FORD   | ANALYST   | 7566 | 1981-12-03 | 3000.00 |    NULL |     20 |
|  7934 | MILLER | CLERK     | 7782 | 1982-01-23 | 1430.00 |    NULL |     10 |
|  1111 | Geeta  | NULL      | NULL | NULL       |   20.00 |  300.00 |  10000 |
|  2222 | Raj    | Analyst   | NULL | NULL       |    NULL |    NULL |     40 |
|  2222 | Raj    | Analyst   | NULL | NULL       |    NULL |    NULL |     20 |
|    11 | raja   | NULL      | NULL | NULL       |    NULL |    NULL |     50 |
+-------+--------+-----------+------+------------+---------+---------+--------+
18 rows in set (0.00 sec)


1.Write a function to calculate total salary of an employee.
Call the function in the select clause. 
	total sal=sal+comm
-->

mysql> DELIMITER //
mysql>
mysql> CREATE FUNCTION total_salary(
    ->     emp_sal DECIMAL(7,2),
    ->     emp_comm DECIMAL(7,2)
    -> )
    -> RETURNS DECIMAL(10,2)
    -> DETERMINISTIC
    -> BEGIN
    ->    DECLARE total_sal DECIMAL(10,2);
    ->
    ->    SET total_sal = IFNULL(emp_sal,0) + IFNULL(emp_comm,0);
    ->    RETURN total_sal;
    -> END //
Query OK, 0 rows affected (0.00 sec)

mysql>
mysql> DELIMITER ;
mysql> select *, total_salary(sal,comm) as "T_SAl" from emp;
+-------+--------+-----------+------+------------+---------+---------+--------+---------+
| EMPNO | ENAME  | JOB       | MGR  | HIREDATE   | SAL     | COMM    | DEPTNO | T_SAl   |
+-------+--------+-----------+------+------------+---------+---------+--------+---------+
|  7369 | SMITH  | CLERK     | 7902 | 1980-12-17 |  800.00 |    NULL |     20 |  800.00 |
|  7499 | ALLEN  | SALESMAN  | 7698 | 1981-02-20 | 1600.00 |  300.00 |     30 | 1900.00 |
|  7521 | WARD   | SALESMAN  | 7698 | 1981-02-22 | 1250.00 |  500.00 |     30 | 1750.00 |
|  7566 | JONES  | MANAGER   | 7839 | 1981-04-02 | 2975.00 |    NULL |     20 | 2975.00 |
|  7654 | MARTIN | SALESMAN  | 7698 | 1981-09-28 | 1250.00 | 1400.00 |     30 | 2650.00 |
|  7698 | BLAKE  | MANAGER   | 7839 | 1981-05-01 | 2850.00 |    NULL |     30 | 2850.00 |
|  7782 | CLARK  | MANAGER   | 7839 | 1981-06-09 | 2450.00 |    NULL |     10 | 2450.00 |
|  7788 | SCOTT  | ANALYST   | 7566 | 1982-12-09 | 3000.00 |    NULL |     20 | 3000.00 |
|  7839 | KING   | PRESIDENT | NULL | 1981-11-17 | 5000.00 |    NULL |     10 | 5000.00 |
|  7844 | TURNER | SALESMAN  | 7698 | 1981-09-08 | 1500.00 |    0.00 |     30 | 1500.00 |
|  7876 | ADAMS  | CLERK     | 7788 | 1983-01-12 | 1100.00 |    NULL |     20 | 1100.00 |
|  7900 | JAMES  | CLERK     | 7698 | 1981-12-03 |  950.00 |    NULL |     30 |  950.00 |
|  7902 | FORD   | ANALYST   | 7566 | 1981-12-03 | 3000.00 |    NULL |     20 | 3000.00 |
|  7934 | MILLER | CLERK     | 7782 | 1982-01-23 | 1300.00 |    NULL |     10 | 1300.00 |
|  1111 | Geeta  | NULL      | NULL | NULL       |   20.00 |  300.00 |  10000 |  320.00 |
|  2222 | Raj    | Analyst   | NULL | NULL       |    NULL |    NULL |     40 |    0.00 |
|  2222 | Raj    | Analyst   | NULL | NULL       |    NULL |    NULL |     20 |    0.00 |
|    11 | raja   | NULL      | NULL | NULL       |    NULL |    NULL |     50 |    0.00 |
+-------+--------+-----------+------+------------+---------+---------+--------+---------+
18 rows in set (0.00 sec)




2.Write a function to generate an email. Call the function in select clause.email is generated as follows
​​​​​ first 2 letters of name + last 2 letters of job @knowit.com. Call the function in the select clause.
-->

3.Write a procedure which accepts job as a 'in' parameter, and display maximunm salary for that job.
Write a function cal_sal() which calculates maximum salary for the job.
Function should return maximum salary to the procedure. Print max sal in the procedure.
-->


1.Write a cursor which will handle all rows having deptno 20;
-->

2.Write a cursor to increment salary as follows
     Clerk 10 % rise
     Manager 5% rise
     Analyst 7% rise.
    No rise given for other jobs. 
-->

3.Pass job as a parameter to procedure and display all employees working
​​​​​​​    for the specified job using cursor.
-->